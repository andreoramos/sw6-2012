<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
const int P = 2;
typedef int[0, P-1] id_person;

const int F = 5;
typedef int[0, F-1] id_floor;

const int L = 2;
typedef int[0, L-1] id_lift;

chan enter[L][P][F], exit[L][P][F];
chan reqFloor[L][F];
broadcast chan arrived[L][F];
chan callElevatorToFloor[L][F];



</declaration><template><name x="5" y="5">Elevator</name><parameter>const id_lift id</parameter><declaration>// Place local declarations here.
clock time;

int[0,P] persons = 0;
id_floor floor = 0;

id_floor list[F+1];
int[0,F] len = 0;

// Put an element at the end of the queue
void enqueue(id_floor element)
{
        list[len++] = element;
}

// Remove the front element of the queue
void dequeue()
{
        int i = 0;
        len -= 1;
        while (i &lt; len)
        {
                list[i] = list[i + 1];
                i++;
        }
        list[i] = 0;
}

// Returns the front element of the queue
id_floor front()
{
   return list[0];
}

// Returns the last element of the queue
id_floor tail()
{
   return list[len - 1];
}</declaration><location id="id0" x="-1080" y="-408"><name x="-1104" y="-456">Stopped</name><label kind="invariant" x="-1104" y="-440">time &lt;= 50</label></location><location id="id1" x="-1600" y="-192"><name x="-1632" y="-176">Door_closed</name><label kind="invariant" x="-1632" y="-160">time &lt;= 25</label></location><location id="id2" x="-1600" y="-408"><name x="-1592" y="-400">Door_open</name><label kind="invariant" x="-1592" y="-384">time &lt;= 20</label></location><location id="id3" x="-1080" y="-192"><name x="-1104" y="-176">Moving</name><label kind="invariant" x="-1104" y="-160">time &lt;= 45</label></location><init ref="id2"/><transition><source ref="id3"/><target ref="id0"/><label kind="guard" x="-1120" y="-312">floor == front()</label></transition><transition><source ref="id2"/><target ref="id2"/><label kind="select" x="-1824" y="-576">newFloor : id_floor</label><label kind="guard" x="-1824" y="-560">persons == 0 &amp;&amp; len == 0</label><label kind="synchronisation" x="-1824" y="-546">callElevatorToFloor[id][newFloor]?</label><label kind="assignment" x="-1824" y="-531">enqueue(newFloor)</label><nail x="-1656" y="-528"/><nail x="-1728" y="-472"/></transition><transition><source ref="id1"/><target ref="id3"/><label kind="guard" x="-1400" y="-192">len &gt;= persons</label></transition><transition><source ref="id2"/><target ref="id1"/><label kind="guard" x="-1744" y="-312">persons &gt; 0 || len &gt; 0</label><label kind="assignment" x="-1744" y="-296">time = 0</label></transition><transition><source ref="id2"/><target ref="id2"/><label kind="select" x="-1608" y="-520">person : id_person</label><label kind="guard" x="-1608" y="-504">persons &gt; 0</label><label kind="synchronisation" x="-1608" y="-488">exit[id][person][floor]?</label><label kind="assignment" x="-1608" y="-472">persons--</label><nail x="-1568" y="-448"/><nail x="-1600" y="-448"/></transition><transition><source ref="id3"/><target ref="id0"/><label kind="guard" x="-1224" y="-312">floor &gt; front()</label><label kind="assignment" x="-1224" y="-296">floor--</label><nail x="-1136" y="-296"/></transition><transition><source ref="id3"/><target ref="id0"/><label kind="guard" x="-1016" y="-312">floor &lt; front()</label><label kind="assignment" x="-1016" y="-296">floor++</label><nail x="-1024" y="-296"/></transition><transition><source ref="id0"/><target ref="id2"/><label kind="guard" x="-1368" y="-368">floor == front()</label><label kind="synchronisation" x="-1368" y="-352">arrived[id][floor]!</label><label kind="assignment" x="-1368" y="-336">dequeue(), time = 0</label><nail x="-1272" y="-368"/><nail x="-1376" y="-368"/></transition><transition><source ref="id1"/><target ref="id1"/><label kind="select" x="-1792" y="-240">newFloor : id_floor</label><label kind="synchronisation" x="-1792" y="-224">reqFloor[id][newFloor]?</label><label kind="assignment" x="-1792" y="-208">enqueue(newFloor)</label><nail x="-1648" y="-192"/><nail x="-1648" y="-224"/></transition><transition><source ref="id2"/><target ref="id2"/><label kind="select" x="-1816" y="-432">person : id_person</label><label kind="guard" x="-1816" y="-416">persons &lt;= 4 &amp;&amp; len == 0</label><label kind="synchronisation" x="-1816" y="-400">enter[id][person][floor]?</label><label kind="assignment" x="-1816" y="-382">persons++</label><nail x="-1648" y="-408"/><nail x="-1648" y="-376"/></transition><transition><source ref="id0"/><target ref="id2"/><label kind="guard" x="-1368" y="-488">floor != front()</label><label kind="assignment" x="-1368" y="-472">time = 0</label><nail x="-1272" y="-448"/><nail x="-1376" y="-448"/></transition></template><template><name>Person</name><parameter>const id_person id</parameter><declaration>clock time;

id_floor floor = 0;
id_lift myLift;

</declaration><location id="id4" x="-912" y="-128"><name x="-928" y="-112">Angry</name></location><location id="id5" x="-416" y="-304"><name x="-440" y="-336">Exiting</name><committed/></location><location id="id6" x="-416" y="-128"><name x="-456" y="-120">RequestedFloor</name></location><location id="id7" x="-912" y="-304"><name x="-1000" y="-312">Wating</name><label kind="invariant" x="-1000" y="-296">time &lt;= 1000</label></location><location id="id8" x="-664" y="-128"><name x="-688" y="-112">Entered</name></location><location id="id9" x="-664" y="-304"><name x="-688" y="-336">OnFloor</name></location><init ref="id9"/><transition><source ref="id4"/><target ref="id9"/><label kind="select" x="-864" y="-168">newFloor : id_floor</label><label kind="assignment" x="-864" y="-152">floor = newFloor, time = 0</label><label kind="comments">The person is mad and takes the stairs!</label></transition><transition><source ref="id7"/><target ref="id4"/><label kind="guard" x="-1000" y="-224">time == 1000</label></transition><transition><source ref="id6"/><target ref="id5"/><label kind="synchronisation" x="-408" y="-240">arrived[myLift][floor]?</label></transition><transition><source ref="id7"/><target ref="id9"/><label kind="select" x="-816" y="-424">lift : id_lift</label><label kind="synchronisation" x="-816" y="-408">arrived[lift][floor]?</label><label kind="assignment" x="-816" y="-392">time = 0</label><nail x="-784" y="-376"/></transition><transition><source ref="id9"/><target ref="id8"/><label kind="select" x="-648" y="-248">l : id_lift</label><label kind="synchronisation" x="-648" y="-232">enter[l][id][floor]!</label><label kind="assignment" x="-648" y="-216">myLift = l</label></transition><transition><source ref="id5"/><target ref="id9"/><label kind="synchronisation" x="-608" y="-344">exit[myLift][id][floor]!</label><label kind="assignment" x="-608" y="-328">time = 0</label></transition><transition><source ref="id8"/><target ref="id6"/><label kind="select" x="-616" y="-126">newFloor : id_floor</label><label kind="guard" x="-616" y="-111">floor != newFloor</label><label kind="synchronisation" x="-616" y="-96">reqFloor[myLift][newFloor]!</label><label kind="assignment" x="-616" y="-81">floor = newFloor</label></transition><transition><source ref="id9"/><target ref="id7"/><label kind="select" x="-872" y="-304">lift : id_lift</label><label kind="synchronisation" x="-872" y="-288">callElevatorToFloor[lift][floor]!</label><label kind="assignment" x="-872" y="-272">time = 0</label></transition></template><system>system Person, Elevator;</system></nta>